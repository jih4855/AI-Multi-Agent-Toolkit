{
  "concepts_and_terms": [
    "데이터베이스 뷰",
    "이진트리",
    "트리 깊이",
    "최대 노드 수",
    "루트 노드",
    "논리적 독립성",
    "CREATE 문",
    "ALTER 문",
    "DROP 문",
    "후위 표기식",
    "Postfix expression",
    "연산자",
    "피연산자",
    "3단계 스키마 구조",
    "외부 스키마",
    "가상 테이블",
    "물리적 테이블",
    "식 계산"
  ],
  "questions": [
    {
      "question": "데이터베이스 뷰(View)에 대한 설명으로 옳지 않은 것은?",
      "options": [
        "가상 테이블의 일종이다.",
        "데이터베이스에 물리적으로 저장된다.",
        "CREATE 문을 사용하여 생성한다.",
        "다른 뷰를 대상으로 설정하여 생성할 수 있다."
      ],
      "answer": "데이터베이스에 물리적으로 저장된다.",
      "explanation": "뷰는 가상 테이블의 일종이며, 물리적으로 구현되지 않으므로 물리적 테이블처럼 데이터베이스에 직접 저장되지 않는다. CREATE 문으로 생성하며, 다른 뷰를 대상으로 설정하여 생성할 수 있다."
    },
    {
      "question": "이진트리에서 트리 깊이가 k일 때 최대 노드 수를 올바르게 계산하는 식은?",
      "options": [
        "2^k",
        "2^(k+1) - 1",
        "k+1",
        "k^2"
      ],
      "answer": "2^(k+1) - 1",
      "explanation": "이진트리의 트리 깊이가 k일 때 최대 노드 수는 2^(k+1) - 1이다."
    },
    {
      "question": "데이터베이스 뷰에 대한 설명으로 틀린 것은?",
      "options": [
        "CREATE 문을 사용하여 뷰를 생성한다.",
        "논리적 독립성을 제공하는 중요한 수단이 될 수 있다.",
        "뷰의 정의를 변경할 때는 ALTER 문을 주로 사용한다.",
        "사용자 권한 제한을 적용하여 보안성을 높일 수 있다."
      ],
      "answer": "뷰의 정의를 변경할 때는 ALTER 문을 주로 사용한다.",
      "explanation": "뷰의 정의를 변경할 때는 일반적으로 DROP 문을 사용하여 기존 뷰를 삭제하고 CREATE 문으로 다시 생성한다. ALTER 문은 뷰의 정의를 변경하는 용도로 주로 사용되지 않는다. 뷰는 논리적 독립성과 사용자 권한 제한에 기여한다."
    },
    {
      "question": "후위 표기식 (Postfix expression)의 특징으로 옳은 것은?",
      "options": [
        "식 계산 시 연산자가 항상 피연산자 앞에 위치한다.",
        "연산자가 피연산자 뒤에 위치하는 형식이다.",
        "식 계산 시 연산자가 피연산자 사이에 위치한다.",
        "연산자가 필요 없는 식 계산 방식이다."
      ],
      "answer": "연산자가 피연산자 뒤에 위치하는 형식이다.",
      "explanation": "후위 표기식은 식 계산을 위해 연산자가 피연산자 뒤에 위치하는 형태를 말한다."
    },
    {
      "question": "데이터베이스 3단계 스키마 구조에서 뷰가 제공하는 중요한 이점과 관련된 설명으로 가장 적절한 것은?",
      "options": [
        "물리적 테이블의 직접적인 변경을 허용하여 데이터 접근 속도를 향상시킨다.",
        "외부 스키마에 대응되며, 논리적 독립성 확보에 기여한다.",
        "연산자의 우선순위를 결정하여 식 계산을 용이하게 한다.",
        "이진트리의 트리 깊이를 줄여 최대 노드 수를 제한한다."
      ],
      "answer": "외부 스키마에 대응되며, 논리적 독립성 확보에 기여한다.",
      "explanation": "뷰는 3단계 스키마 구조에서 외부 스키마에 대응되는 관점을 제공하여, 데이터의 논리적 독립성을 확보하는 데 중요한 역할을 한다. 이는 물리적 테이블로부터 독립적인 사용자 관점을 제공한다."
    }
  ],
  "검토가 필요한 문제 목록": [
    "Q4: '후이피비식'이라는 용어 오타 (원문: `후이피비식`, 수정: `후위 표기식`)"
  ],
  "오타 및 수정사항": [
    "Q1 설명: '`뷰의 물리적 구현 여부`는 물리적 구현이 아니므로' -> '물리적으로 구현되지 않으므로'",
    "Q1 설명: '`CREATE 문 (뷰)`으로 생성하며, `뷰 대상 설정 (다른 뷰)`이 가능하다.' -> '`CREATE` 문으로 생성하며, 다른 `뷰`를 대상으로 설정하여 생성할 수 있다.'",
    "Q2 질문: '`이진트리 최대 노드 수 계산식`은?' -> '식은?'",
    "Q2 설명: '`이진트리 최대 노드 수 계산식`인' -> (삭제)",
    "Q2 설명: '`루트 노드`는 트리의 가장 상위 노드이다.' -> (삭제)",
    "Q3 옵션/답변/설명: '`CREATE 문 (뷰)`' -> '`CREATE` 문'",
    "Q3 옵션/답변/설명: '`ALTER 문 (뷰)`' -> '`ALTER` 문'",
    "Q3 설명: '`DROP 문 (뷰)`' -> '`DROP` 문'",
    "Q3 옵션/설명: '`뷰 사용자 권한 제한`' -> '`사용자 권한 제한`'",
    "Q4 질문/옵션/답변/설명: '`후이피비식`' -> '`후위 표기식`'",
    "Q4 옵션/답변/설명: '`데이터 연산자`' -> '`연산자`'",
    "Q5 옵션: '`데이터 연산자`' -> '`연산자`'"
  ]
}