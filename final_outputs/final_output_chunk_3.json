{
  "concepts_and_terms": [
    "후위 표기식",
    "스택",
    "LIFO",
    "관계형 데이터베이스",
    "조인",
    "연산자",
    "피연산자",
    "쿼리"
  ],
  "questions": [
    {
      "question": "후위 표기식으로 표현된 수식을 처리할 때, 연산자의 우선순위와 관계없이 피연산자를 임시로 저장하고 연산을 수행하기 위해 가장 일반적으로 사용되는 자료구조는 무엇인가?",
      "options": [
        "스택",
        "큐",
        "트리",
        "리스트"
      ],
      "answer": "스택",
      "explanation": "후위 표기식(Postfix Notation)은 연산자가 피연산자 뒤에 위치하며, 스택(Stack)은 LIFO(Last-In, First-Out) 특성을 이용하여 피연산자를 순서대로 저장하고, 연산자를 만났을 때 스택에서 피연산자를 꺼내 연산을 수행하는 데 효과적이다."
    },
    {
      "question": "관계형 데이터베이스에서 두 개 이상의 테이블에 분리되어 저장된 데이터를 특정 조건을 만족하도록 연결하여 새로운 가상 테이블처럼 결과를 보여주는 데이터 검색 기법을 무엇이라고 하는가?",
      "options": [
        "조인",
        "그룹화",
        "정렬",
        "필터링"
      ],
      "answer": "조인",
      "explanation": "조인(Join)은 데이터베이스에서 쿼리(Query)를 사용하여 여러 테이블에 걸쳐 있는 관련 데이터를 통합하여 하나의 결과 집합으로 만드는 연산이다."
    },
    {
      "question": "프로그래밍이나 데이터 처리 과정에서 특정 값이나 변수에 대해 산술, 비교, 논리 등의 작업을 수행하도록 지시하는 기호나 키워드를 통칭하는 용어는 무엇인가?",
      "options": [
        "연산자",
        "피연산자",
        "함수",
        "모듈"
      ],
      "answer": "연산자",
      "explanation": "연산자는 데이터(피연산자)에 대해 특정한 조작을 가하여 새로운 값을 도출하거나 조건을 판단하는 등의 역할을 한다. 예를 들어, `A + B`와 같은 표현에서 `+`가 연산자이며 `A`와 `B`가 피연산자이다."
    },
    {
      "question": "데이터베이스에 저장된 정보를 추출, 조작, 관리하기 위해 사용되는 질의(query) 언어의 구성 요소이자, 사용자 또는 애플리케이션이 데이터베이스와 상호작용하는 기본적인 수단이 되는 명령어 집합을 통칭하는 용어는?",
      "options": [
        "쿼리",
        "스택",
        "후위 표기식",
        "엔드 확장"
      ],
      "answer": "쿼리",
      "explanation": "쿼리(Query)는 데이터베이스 시스템에서 필요한 데이터를 검색하고, 데이터를 삽입, 수정, 삭제하는 등의 다양한 작업을 수행하는 데 사용되는 요청 또는 명령을 의미한다."
    }
  ],
  "검토가 필요한 문제 목록": [
    "문제4: '엔드 확장' 옵션은 데이터베이스 질의 언어의 맥락에서 관련성이 떨어지거나 표준적인 용어가 아닙니다. 효과적인 오답 선지로 대체하는 것이 좋습니다."
  ],
  "오타 및 수정사항": [
    "문제3 설명: '이는 '데이터 데이터 연산자'라는 용어에서 '연산자'의 핵심적인 의미를 포함한다.' -> '예를 들어, `A + B`와 같은 표현에서 `+`가 연산자이며 `A`와 `B`가 피연산자이다.' (명확성을 위해 재작성)"
  ]
}